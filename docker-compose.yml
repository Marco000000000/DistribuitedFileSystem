version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/datalog:/var/lib/zookeeper/log

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker
    hostname: broker
    volumes:
      - ./kafka/data:/var/lib/kafka/data
      - ./kafka/logs:/var/lib/kafka/logs
    
  db:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    hostname: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql

  filesystem:
    build:
      context: ./filesystem
      dockerfile: Dockerfile.scripts
    depends_on:
      - zookeeper
      - broker
      - manager
    volumes: 
      - ./filesystem:/app/filesystem
    hostname: filesystem
    container_name: filesystem

  
  manager:
    build:
      context: ./manager
      dockerfile: Dockerfile.scripts
    depends_on:
      - zookeeper
      - broker
      - db
    volumes: 
      - ./manager:/app/manager
    hostname: Manager
    container_name: manager


  controller_manager:
    build:
      context: ./controller_manager
      dockerfile: Dockerfile.scripts
    depends_on:
      - zookeeper
      - broker
      - db
      - manager
    volumes: 
      - ./controller_manager:/app/controller_manager
    hostname: cManager
    container_name: controller_manager

  
  download_controller:
    build:
      context: ./download_controller
      dockerfile: Dockerfile.scripts
      
    depends_on:
      - zookeeper
      - broker
      - db
      - controller_manager
    volumes: 
      - ./download_controller:/app/download_controller
    hostname: cDownload
    container_name: download_controller

  
  uploadcontroller:
    build:
      context: ./uploadcontroller
      dockerfile: Dockerfile.scripts
    depends_on:
      - zookeeper
      - broker
      - db
      - controller_manager
    volumes: 
      - ./uploadcontroller:/app/uploadcontroller
    hostname: cUpload
    container_name: uploadcontroller

  testmysql:
    build:
      context: ./testmysql
      dockerfile: Dockerfile.scripts
    depends_on:
      - db
    volumes:
      - ./testmysql:/app/testmysql
    hostname: testmysql
    container_name: testmysql

volumes:
  zookeeper:
  broker:
  db:
  filesystem:
  manager:
  controller_manager:
  download_controller:
  uploadcontroller:
  testmysql: